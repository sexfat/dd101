@import "base/var";
@import "mixins/mixin";
@import  "page/moblie";


body {
    font-size: $fontSize;
    font-family: $fontFamily;
    height: 3500px;
    @include body-fonts($fontSize);
}

.body-all {
    h1 {
        color: $blue;
        font-size: $fontSize;

        em {
            font-size: 18px;
        }
    }

    .section {
        height: 120px;

        h2 {
            color: $blue;
        }
    }
}

span {
    font-size: $fontSize;
}


.box {
    @include marginauto();
}


.box2 {
    @include marginautos(200vw);
}


.box4 {
    @include margin(10px, 20px, 400px, 150px);
}

.box5 {
    @include rect(100px, 400px);
}

.box6 {
    @include rects();
}


@include rect-color ('.section01', 100vw, 300px, #f20) {
    color: #fff;
    font-size: 100px;
    padding-top: 50px;
    @include box-sizing(border-box);

    a {
        &:hover {
            color: rgb(0, 255, 21);
        }
    }
}

@include rect-color ('.section02', 100vw, 400px, rgb(175, 247, 31));


%fontSize100 {
    font-size: 100px;
    color: #000;
}


@mixin fontSize100() {
    font-size: 100px;
    color: #000;
}



.spec {
    @include rect(800px, 200px);
    @include box-sizing(border-box);
    background-color: rgb(0, 60, 255);
}

span {
    @extend %fontSize100;
}

.btn {
    width: 500px;
    height: 60px;
    border: 1px solid #000;
    cursor: pointer;

    &:hover {
        background-color: rgb(212, 255, 0);
    }
}

.blue-btn {
    @extend .btn;
    background-color: rgb(46, 103, 247);
}




.yellow-btn {
    @extend .btn;
    //@include btn();
    background-color: rgb(255, 251, 6);
}


.btn-shadow {
    @extend .btn;
    background-color: rgb(200, 0, 255);
    @include hover_shadow (3px, 2px, 10px, rgb(255, 17, 17));
}


.btn-wide {
    @extend .btn;
    background-color: rgb(33, 230, 33);
    @include hover_shadow (3px, 2px, 10px, rgb(64, 154, 0));
}

$numbs : 100px;

.opct {
    width: 10% + 50;
    height: 10% - 100;
    //    font-size:  $numbs * 3;
    max-width: (100 / 10) + px;
}

.wide {
    font-size: floor(100 / 3.2) + px; //無條件捨去
    width: round(10 * 2.55) + px; //四捨五入;
    height: ceil(10 * 3.66) + px; // 無條件進位
}

body {
    @include theme($theme);
}

@for $i from 1 through 10 {
    .boxs-#{$i} {
        width: $i * 1px;
    }
}


@include push-dec(10);


@include push(top, 1);
@include push(right, 5);
@include push(bottom, 1);

// .blue-btn {

//     margin-left:100px; 
// }



$types: (defaule : #333,
    primary : #428bca,
    second : #ff0000) !default;

//按鈕
@each $name,
$color in $types {
    .btn-#{$name} {
        background: $color;
        color: #fff;
        border: 1px solid darken($color, 5%);
    }
}


//sass map
$fontweight : (thin : 300,
    medium : 500,
    bold : 800);

//使用 map-get
.font {
    font-weight: map-get($fontweight, thin);
}


@each $classnames,
$value in $fontweight {

    .font-#{$classnames} {
        font-weight: $value
    }

}

//color map https://codeburst.io/a-successful-sass-theme-structure-ca9d1c477dc7
$theme-colors: ('primary': ('base': #384ea9,
        'light': #e4efff,
        'dark': #273677),
    'accent': ('base': #f08110,
        'light': #ff8100,
        'dark': #e47f17),
    'foreground': ('base': #393939,
        'light': #6e6e6e,
        'dark': #111),
    'background': ('base': #f8f5f5,
        'light': #fff,
        'dark': #ddd));



@function theme-color($key: 'primary', $variant: 'base') {
    $map: map-get($theme-colors, $key);
    @return map-get($map, $variant);
}



$value: a1 a2 a3 a4 box;

@each $img in $value {

    .#{$img}-images {
        background-image: url('img/#{$img}.jpg');
        width: 100%;
        height: auto;
        background-color: rgb(219, 219, 219);
    }
}

$lists: h1 48px #f20,
h2 36px #000,
h3 24px #fe2,
h4 18px #f34;




@mixin title-modules($lists...) {

    @each $title,
    $fontSize,
    $color in $lists {
        #{$title} {
            font-size: $fontSize;
            color: $color;
        }
    }
}



@include title-modules(h1 48px #f20,
    h2 36px #000,
    h3 24px #fe2,
    h4 18px #f34,
    h5 16px blue);




@mixin grid($num) {
    @for $i from 1 through $num {
        .col-md-#{$i} {
            width: ($i / $num) * 100%
        }
    }
}


@include grid(12);


